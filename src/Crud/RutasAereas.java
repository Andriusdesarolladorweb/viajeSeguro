package Crud;

import BD.ConexionMYSQL;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Inicio.Login;

/**
 *
 * @author jquezada
 */
public class RutasAereas extends javax.swing.JFrame {

    ConexionMYSQL con = new ConexionMYSQL();
    Connection cn = con.conectar();

    /**
     * Creates new form ContactosCRUD
     */
    public RutasAereas() {
        initComponents();
        this.setLocationRelativeTo(null);
        limpiarCampos();
        mostrarDatos("");

        txtAerolinea.requestFocus();
        //  btnActualizar.setEnabled(false);
        // btnCancelar.setEnabled(false);
        btnAgregar.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popMenu = new javax.swing.JPopupMenu();
        popEliminar = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        pnlFormulario = new javax.swing.JPanel();
        lblAerolinea = new javax.swing.JLabel();
        lblAsientosTotales = new javax.swing.JLabel();
        lblHoraDeSalida = new javax.swing.JLabel();
        lblDestino = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        lblHoraDeLlegada = new javax.swing.JLabel();
        lblCosto = new javax.swing.JLabel();
        txtHoraLlegada = new javax.swing.JTextField();
        txtAsientosTotales = new javax.swing.JTextField();
        txtDestino = new javax.swing.JTextField();
        txtHoraSalida = new javax.swing.JTextField();
        txtAerolinea = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        btnActualizar = new javax.swing.JButton();
        txtCosto = new javax.swing.JTextField();
        btnEliminar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jpRutas = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRutas = new javax.swing.JTable();

        popEliminar.setText("Eliminar registro");
        popEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popEliminarActionPerformed(evt);
            }
        });
        popMenu.add(popEliminar);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlFormulario.setBackground(new java.awt.Color(0, 134, 190));
        pnlFormulario.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Formulario", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N
        pnlFormulario.setForeground(new java.awt.Color(255, 255, 255));

        lblAerolinea.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblAerolinea.setForeground(new java.awt.Color(255, 255, 255));
        lblAerolinea.setText("Aerolinea");

        lblAsientosTotales.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblAsientosTotales.setForeground(new java.awt.Color(255, 255, 255));
        lblAsientosTotales.setText("Asientos Totales");

        lblHoraDeSalida.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblHoraDeSalida.setForeground(new java.awt.Color(255, 255, 255));
        lblHoraDeSalida.setText("Hora de Salida");

        lblDestino.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblDestino.setForeground(new java.awt.Color(255, 255, 255));
        lblDestino.setText("Destino");

        btnAgregar.setText("Agregar");
        btnAgregar.setToolTipText("Guardar datos del contacto");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        lblHoraDeLlegada.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblHoraDeLlegada.setForeground(new java.awt.Color(255, 255, 255));
        lblHoraDeLlegada.setText("Hora de Llegada");

        lblCosto.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblCosto.setForeground(new java.awt.Color(255, 255, 255));
        lblCosto.setText("Costo");

        txtHoraLlegada.setBackground(new java.awt.Color(204, 204, 204));
        txtHoraLlegada.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtHoraLlegada.setBorder(null);

        txtAsientosTotales.setBackground(new java.awt.Color(204, 204, 204));
        txtAsientosTotales.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtAsientosTotales.setBorder(null);

        txtDestino.setBackground(new java.awt.Color(204, 204, 204));
        txtDestino.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtDestino.setBorder(null);

        txtHoraSalida.setBackground(new java.awt.Color(204, 204, 204));
        txtHoraSalida.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtHoraSalida.setBorder(null);

        txtAerolinea.setBackground(new java.awt.Color(204, 204, 204));
        txtAerolinea.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtAerolinea.setBorder(null);
        txtAerolinea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAerolineaActionPerformed(evt);
            }
        });

        txtId.setBackground(new java.awt.Color(0, 134, 190));
        txtId.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtId.setForeground(new java.awt.Color(0, 134, 190));
        txtId.setBorder(null);

        btnActualizar.setText("Actualizar");
        btnActualizar.setToolTipText("Guardar datos del contacto");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        txtCosto.setBackground(new java.awt.Color(204, 204, 204));
        txtCosto.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtCosto.setBorder(null);

        btnEliminar.setBackground(new java.awt.Color(255, 51, 51));
        btnEliminar.setText("Eliminar");
        btnEliminar.setToolTipText("Guardar datos del contacto");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/salir.png"))); // NOI18N
        jButton3.setText("Cerrar sesi√≤n");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFormularioLayout = new javax.swing.GroupLayout(pnlFormulario);
        pnlFormulario.setLayout(pnlFormularioLayout);
        pnlFormularioLayout.setHorizontalGroup(
            pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormularioLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFormularioLayout.createSequentialGroup()
                        .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlFormularioLayout.createSequentialGroup()
                                .addComponent(lblDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblHoraDeSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlFormularioLayout.createSequentialGroup()
                                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAsientosTotales, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAsientosTotales, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(60, Short.MAX_VALUE))
                    .addGroup(pnlFormularioLayout.createSequentialGroup()
                        .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtHoraSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlFormularioLayout.createSequentialGroup()
                                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAerolinea, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAerolinea, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblHoraDeLlegada, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtHoraLlegada, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(pnlFormularioLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlFormularioLayout.createSequentialGroup()
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlFormularioLayout.setVerticalGroup(
            pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormularioLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAerolinea, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHoraDeLlegada, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtAerolinea, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(txtHoraLlegada))
                .addGap(6, 6, 6)
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAsientosTotales, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAsientosTotales, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFormularioLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlFormularioLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblHoraDeSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtHoraSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53))
        );

        jpRutas.setBackground(new java.awt.Color(255, 255, 255));
        jpRutas.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Rutas Aereas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        tblRutas.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        tblRutas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombres", "Apellidos", "Telefono", "Correo"
            }
        ));
        tblRutas.setToolTipText("Listado de contactos");
        tblRutas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRutasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblRutas);

        javax.swing.GroupLayout jpRutasLayout = new javax.swing.GroupLayout(jpRutas);
        jpRutas.setLayout(jpRutasLayout);
        jpRutasLayout.setHorizontalGroup(
            jpRutasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 722, Short.MAX_VALUE)
        );
        jpRutasLayout.setVerticalGroup(
            jpRutasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpRutasLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlFormulario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpRutas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlFormulario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpRutas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void popEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popEliminarActionPerformed
        if (JOptionPane.showConfirmDialog(rootPane, "Se eliminara el registro, desea continuar?", "Eliminar Registro",
                JOptionPane.WARNING_MESSAGE, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            try {
                String Borrar = "DELETE FROM empleados WHERE id='" + "'";
                PreparedStatement ps;
                ps = (PreparedStatement) cn.prepareStatement(Borrar);
                int respuesta = ps.executeUpdate();
                if (respuesta > 0) {
                    JOptionPane.showMessageDialog(null, "Registro eliminado con exito!");
                    limpiarCampos();
                    mostrarDatos("");
                } else {
                    JOptionPane.showMessageDialog(null, "No ha seleccionado la fila a ser borrada.");
                    limpiarCampos();
                    mostrarDatos("");
                }
            } catch (SQLException e) {
                System.err.println("Error al eliminar...." + e);
                JOptionPane.showMessageDialog(null, "Error al eliminar!");
            }

        } else {
            limpiarCampos();
            mostrarDatos("");
            // btnActualizar.setEnabled(false);
            //btnCancelar.setEnabled(false);
            btnAgregar.setEnabled(true);
        }
    }//GEN-LAST:event_popEliminarActionPerformed

    private void tblRutasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRutasMouseClicked
      int fila = this.tblRutas.getSelectedRow();
          this.txtId.setText(this.tblRutas.getValueAt(fila,  0).toString());
        this.txtAerolinea.setText(this.tblRutas.getValueAt(fila, 2).toString());
       this.txtDestino.setText(this.tblRutas.getValueAt(fila, 3).toString());
       this.txtHoraSalida.setText(this.tblRutas.getValueAt(fila, 4).toString());
        this.txtCosto.setText(this.tblRutas.getValueAt(fila, 5).toString());
       this.txtHoraLlegada.setText(this.tblRutas.getValueAt(fila, 6).toString());
      
       
    }//GEN-LAST:event_tblRutasMouseClicked

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String insertarSQL = "INSERT INTO  vuelos (  Aerolinea, Destino, Hora_de_salida, Hora_de_llegada, Costo)VALUES (?,?,?,?,?)";
        try {
            PreparedStatement ps;
            ps = (PreparedStatement) cn.prepareStatement(insertarSQL);

            ps.setString(1, txtAerolinea.getText());
            ps.setString(2, txtDestino.getText());
            ps.setString(3, txtHoraSalida.getText());
            ps.setString(4, txtHoraLlegada.getText());
            ps.setString(5, txtCosto.getText());
            ps.executeUpdate();
            JOptionPane.showMessageDialog(rootPane, "Registro realizado con exito.");

            btnAgregar.setEnabled(true);
            mostrarDatos("");
            limpiarCampos();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Error al tratar de insertar los datos: " + ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
try {
            PreparedStatement ps =cn.prepareStatement("Update vuelos  set Aerolinea='"+txtAerolinea.getText()+"', Destino ='"+txtDestino.getText()+"', Aerolinea ='"+txtAerolinea.getText()+"',Destino ='"+txtDestino.getText()+"', Hora_de_salida ='"+txtHoraSalida.getText()+"', Hora_de_llegada ='"+txtHoraLlegada.getText()+"',  Costo ='"+txtCosto.getText()+"' where ID='"+txtId.getText()+ "'");
            
            int  indice =ps.executeUpdate();
            
            if(indice>0){
               JOptionPane.showMessageDialog(rootPane, "Actualizacion realizada con exito.");
                mostrarDatos("");
                 limpiarCampos();
            }else{
                JOptionPane.showMessageDialog(rootPane, "no");
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Error al tratar de insertar los datos: " + ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void txtAerolineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAerolineaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAerolineaActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        String idc = txtId.getText();
        int fila = tblRutas.getSelectedRow();
        if (fila < 0) {
            JOptionPane.showMessageDialog(rootPane, "Cliente no tiene seleccionado");
            limpiarCampos();
        } else {
            try {
                ConexionMYSQL con = new ConexionMYSQL();
                Connection cn = con.conectar();
                String sql = "DELETE FROM vuelos WHERE ID = ?";
                PreparedStatement pst = cn.prepareStatement(sql);
                pst.setInt(1, Integer.parseInt(idc));
                int rs = pst.executeUpdate();
                if (rs > 0) {
                    JOptionPane.showMessageDialog(rootPane, "Registro eliminado con √©xito.");
                    mostrarDatos(""); // Recargar la tabla para reflejar los cambios
                    limpiarCampos(); // Limpiar los campos despu√©s de la eliminaci√≥n
                } else {
                    JOptionPane.showMessageDialog(rootPane, "No se pudo eliminar el registro.");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Error al tratar de eliminar el registro: " + ex);
            }
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new Login().setVisible(true);
        this.dispose();//
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RutasAereas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RutasAereas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RutasAereas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RutasAereas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new RutasAereas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnActualizar;
    public javax.swing.JButton btnAgregar;
    public javax.swing.JButton btnEliminar;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel jpRutas;
    private javax.swing.JLabel lblAerolinea;
    private javax.swing.JLabel lblAsientosTotales;
    private javax.swing.JLabel lblCosto;
    private javax.swing.JLabel lblDestino;
    private javax.swing.JLabel lblHoraDeLlegada;
    private javax.swing.JLabel lblHoraDeSalida;
    private javax.swing.JPanel pnlFormulario;
    private javax.swing.JMenuItem popEliminar;
    private javax.swing.JPopupMenu popMenu;
    public javax.swing.JTable tblRutas;
    private javax.swing.JTextField txtAerolinea;
    private javax.swing.JTextField txtAsientosTotales;
    private javax.swing.JTextField txtCosto;
    private javax.swing.JTextField txtDestino;
    private javax.swing.JTextField txtHoraLlegada;
    private javax.swing.JTextField txtHoraSalida;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables

    private void mostrarDatos(String valorBuscar) {
        String consultaSQL = "SELECT * FROM  vuelos WHERE CONCAT(ID,'',Aerolinea,Destino) LIKE '%" + valorBuscar + "%'";
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Aerolinea");
        modelo.addColumn("Destino");
        modelo.addColumn("Hora de_ salida");
        modelo.addColumn("Hora de llegada");
        modelo.addColumn("Costo");

        tblRutas.setModel(modelo);
        //String consultaSQL = "SELECT * FROM tbl_usuarios ORDER BY id";
        String data[] = new String[6];
        Statement st;
        try {
            st = (Statement) cn.createStatement();
            ResultSet rs = st.executeQuery(consultaSQL);
            while (rs.next()) {
                data[0] = rs.getString(1);
                data[1] = rs.getString(2);
                data[2] = rs.getString(3);
                data[3] = rs.getString(4);
                data[4] = rs.getString(5);
                data[5] = rs.getString(6);
               

                modelo.addRow(data);
            }
            tblRutas.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Error en la consulta SQL: " + ex);
        }
    }

    private void limpiarCampos() {

        txtAerolinea.setText("");
        txtAsientosTotales.setText("");
        txtId.setText("");
        txtDestino.setText("");
        txtHoraLlegada.setText("");
        txtHoraSalida.setText("");
        txtCosto.setText("");
    }
}
